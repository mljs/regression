{"version":3,"file":"ml-regression.js","sources":["../node_modules/is-any-array/lib-esm/index.js","../node_modules/ml-regression-base/lib-esm/checkArrayLength.js","../node_modules/ml-regression-base/lib-esm/BaseRegression.js","../node_modules/ml-regression-base/lib-esm/maybeToPrecision.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/matrix.js","../node_modules/ml-matrix/matrix.mjs","../node_modules/ml-regression-polynomial/lib-esm/index.js","../src/regression/potential-regression.js","../node_modules/ml-regression-simple-linear/lib-esm/index.js","../node_modules/ml-regression-exponential/src/index.js","../node_modules/ml-regression-power/src/index.js","../node_modules/ml-regression-multivariate-linear/src/index.js","../node_modules/ml-distance-euclidean/lib-es6/euclidean.js","../node_modules/ml-kernel-gaussian/gaussian-kernel.js","../node_modules/ml-kernel-polynomial/polynomial-kernel.js","../node_modules/ml-kernel-sigmoid/sigmoid-kernel.js","../node_modules/ml-kernel/src/kernels/anova-kernel.js","../node_modules/ml-kernel/src/kernels/cauchy-kernel.js","../node_modules/ml-kernel/src/kernels/exponential-kernel.js","../node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js","../node_modules/ml-kernel/src/kernels/laplacian-kernel.js","../node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js","../node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js","../node_modules/ml-kernel/src/kernel.js","../src/regression/kernel-ridge-regression.js","../src/regression/poly-fit-regression2d.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-regression-theil-sen/src/index.js","../node_modules/ml-regression-robust-polynomial/lib-esm/utilities/predict.js","../node_modules/ml-regression-robust-polynomial/lib-esm/utilities/calcCoefficients.js","../node_modules/ml-regression-robust-polynomial/lib-esm/utilities/getRandomTuples.js","../node_modules/ml-regression-robust-polynomial/lib-esm/utilities/residualsMedian.js","../node_modules/ml-regression-robust-polynomial/lib-esm/utilities/robustPolynomial.js","../node_modules/ml-regression-robust-polynomial/lib-esm/index.js","../src/index.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/unbound-method\nconst toString = Object.prototype.toString;\n/**\n * Checks if an object is an instance of an Array (array or typed array, except those that contain bigint values).\n *\n * @param value - Object to check.\n * @returns True if the object is an array or a typed array.\n */\nexport function isAnyArray(value) {\n    const tag = toString.call(value);\n    return tag.endsWith('Array]') && !tag.includes('Big');\n}\n//# sourceMappingURL=index.js.map","import { isAnyArray } from 'is-any-array';\n/**\n * Check that x and y are arrays with the same length.\n * @param x - first array\n * @param y - second array\n * @throws if x or y are not the same length, or if they are not arrays\n */\nexport function checkArrayLength(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y)) {\n        throw new TypeError('x and y must be arrays');\n    }\n    if (x.length !== y.length) {\n        throw new RangeError('x and y arrays must have the same length');\n    }\n}\n//# sourceMappingURL=checkArrayLength.js.map","import { isAnyArray } from 'is-any-array';\nimport { checkArrayLength } from './checkArrayLength';\nexport class BaseRegression {\n    constructor() {\n        if (new.target === BaseRegression) {\n            throw new Error('BaseRegression must be subclassed');\n        }\n    }\n    predict(x) {\n        if (typeof x === 'number') {\n            return this._predict(x);\n        }\n        else if (isAnyArray(x)) {\n            const y = [];\n            for (const xVal of x) {\n                y.push(this._predict(xVal));\n            }\n            return y;\n        }\n        else {\n            throw new TypeError('x must be a number or array');\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _predict(x) {\n        throw new Error('_predict must be implemented');\n    }\n    train() {\n        // Do nothing for this package\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    toString(precision) {\n        return '';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    toLaTeX(precision) {\n        return '';\n    }\n    /**\n     * Return the correlation coefficient of determination (r) and chi-square.\n     * @param x - explanatory variable\n     * @param y - response variable\n     * @return - Object with further statistics.\n     */\n    score(x, y) {\n        checkArrayLength(x, y);\n        const n = x.length;\n        const y2 = new Array(n);\n        for (let i = 0; i < n; i++) {\n            y2[i] = this._predict(x[i]);\n        }\n        let xSum = 0;\n        let ySum = 0;\n        let chi2 = 0;\n        let rmsd = 0;\n        let xSquared = 0;\n        let ySquared = 0;\n        let xY = 0;\n        for (let i = 0; i < n; i++) {\n            xSum += y2[i];\n            ySum += y[i];\n            xSquared += y2[i] * y2[i];\n            ySquared += y[i] * y[i];\n            xY += y2[i] * y[i];\n            if (y[i] !== 0) {\n                chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n            }\n            rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n        }\n        const r = (n * xY - xSum * ySum) /\n            Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n        return {\n            r,\n            r2: r * r,\n            chi2,\n            rmsd: Math.sqrt(rmsd / n),\n        };\n    }\n}\n//# sourceMappingURL=BaseRegression.js.map","/**\n * Cast `number` to string. Optionally `digits` specifies significant figures.\n * @param number\n * @param figures\n * @returns - A string representation of `number`.\n */\nexport function maybeToPrecision(number, figures) {\n    if (number < 0) {\n        number = 0 - number;\n        if (typeof figures === 'number') {\n            return `- ${number.toPrecision(figures)}`;\n        }\n        else {\n            return `- ${number.toString()}`;\n        }\n    }\n    else if (typeof figures === 'number') {\n        return number.toPrecision(figures);\n    }\n    else {\n        return number.toString();\n    }\n}\n//# sourceMappingURL=maybeToPrecision.js.map","import { isAnyArray } from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport { max as default };\n","import { isAnyArray } from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport { min as default };\n","import { isAnyArray } from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isAnyArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isAnyArray = require('is-any-array');\nvar rescale = require('ml-array-rescale');\n\nconst indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\n/**\n * @this {Matrix}\n * @returns {string}\n */\nfunction inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nfunction inspectMatrixWithOptions(matrix, options = {}) {\n  const {\n    maxRows = 15,\n    maxColumns = 10,\n    maxNumSize = 8,\n    padMinus = 'auto',\n  } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize, padMinus) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n\n  if (padMinus === 'auto') {\n    padMinus = false;\n    loop: for (let i = 0; i < maxI; i++) {\n      for (let j = 0; j < maxJ; j++) {\n        if (matrix.get(i, j) < 0) {\n          padMinus = true;\n          break loop;\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize, padMinus));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize, padMinus) {\n  return (\n    num >= 0 && padMinus\n      ? ` ${formatNumber2(num, maxNumSize - 1)}`\n      : formatNumber2(num, maxNumSize)\n  ).padEnd(maxNumSize);\n}\n\nfunction formatNumber2(num, len) {\n  // small.length numbers should be as is\n  let str = num.toString();\n  if (str.length <= len) return str;\n\n  // (7)'0.00123' is better then (7)'1.23e-2'\n  // (8)'0.000123' is worse then (7)'1.23e-3',\n  let fix = num.toFixed(len);\n  if (fix.length > len) {\n    fix = num.toFixed(Math.max(0, len - (fix.length - len)));\n  }\n  if (\n    fix.length <= len &&\n    !fix.startsWith('0.000') &&\n    !fix.startsWith('-0.000')\n  ) {\n    return fix;\n  }\n\n  // well, if it's still too long the user should've used longer numbers\n  let exp = num.toExponential(len);\n  if (exp.length > len) {\n    exp = num.toExponential(Math.max(0, len - (exp.length - len)));\n  }\n  return exp.slice(0);\n}\n\nfunction installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ** value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ** matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n}\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nfunction checkRowIndices(matrix, rowIndices) {\n  if (!isAnyArray.isAnyArray(rowIndices)) {\n    throw new TypeError('row indices must be an array');\n  }\n\n  for (let i = 0; i < rowIndices.length; i++) {\n    if (rowIndices[i] < 0 || rowIndices[i] >= matrix.rows) {\n      throw new RangeError('row indices are out of range');\n    }\n  }\n}\n\nfunction checkColumnIndices(matrix, columnIndices) {\n  if (!isAnyArray.isAnyArray(columnIndices)) {\n    throw new TypeError('column indices must be an array');\n  }\n\n  for (let i = 0; i < columnIndices.length; i++) {\n    if (columnIndices[i] < 0 || columnIndices[i] >= matrix.columns) {\n      throw new RangeError('column indices are out of range');\n    }\n  }\n}\n\nfunction checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nfunction newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nfunction checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n\nfunction sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nfunction varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nfunction varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nfunction centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nfunction centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nfunction centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nfunction getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += matrix.get(i, j) ** 2 / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nfunction getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += matrix.get(i, j) ** 2 / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nfunction getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += matrix.get(i, j) ** 2 / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nfunction scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n\nclass AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isDistance() {\n    if (!this.isSymmetric()) return false;\n\n    for (let i = 0; i < this.rows; i++) {\n      if (this.get(i, i) !== 0) return false;\n    }\n\n    return true;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    switch (by) {\n      case 'row': {\n        const max = new Array(this.rows).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[row]) {\n              max[row] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case 'column': {\n        const max = new Array(this.columns).fill(Number.NEGATIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max[column]) {\n              max[column] = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      case undefined: {\n        let max = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) > max) {\n              max = this.get(row, column);\n            }\n          }\n        }\n        return max;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min(by) {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n\n    switch (by) {\n      case 'row': {\n        const min = new Array(this.rows).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[row]) {\n              min[row] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case 'column': {\n        const min = new Array(this.columns).fill(Number.POSITIVE_INFINITY);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min[column]) {\n              min[column] = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      case undefined: {\n        let min = this.get(0, 0);\n        for (let row = 0; row < this.rows; row++) {\n          for (let column = 0; column < this.columns; column++) {\n            if (this.get(row, column) < min) {\n              min = this.get(row, column);\n            }\n          }\n        }\n        return min;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    switch (type) {\n      case 'max':\n        return this.max();\n      case 'frobenius':\n        return Math.sqrt(this.dot(this));\n      default:\n        throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  mpow(scalar) {\n    if (!this.isSquare()) {\n      throw new RangeError('Matrix must be square');\n    }\n    if (!Number.isInteger(scalar) || scalar < 0) {\n      throw new RangeError('Exponent must be a non-negative integer');\n    }\n    // Russian Peasant exponentiation, i.e. exponentiation by squaring\n    let result = Matrix.eye(this.rows);\n    let bb = this;\n    // Note: Don't bit shift. In JS, that would truncate at 32 bits\n    for (let e = scalar; e >= 1; e /= 2) {\n      if ((e & 1) !== 0) {\n        result = result.mmul(bb);\n      }\n      bb = bb.mmul(bb);\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let result = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      result = result.setSubMatrix(c11, 0, 0);\n      result = result.setSubMatrix(c12, c11.rows, 0);\n      result = result.setSubMatrix(c21, 0, c11.columns);\n      result = result.setSubMatrix(c22, c11.rows, c11.columns);\n      return result.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min,\n          max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    checkRowIndices(this, rowIndices);\n    checkColumnIndices(this, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < rowIndices.length; i++) {\n      let rowIndex = rowIndices[i];\n      for (let j = 0; j < columnIndices.length; j++) {\n        let columnIndex = columnIndices[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    return this.constructor.copy(this, new Matrix(this.rows, this.columns));\n  }\n\n  /**\n   * @template {AbstractMatrix} M\n   * @param {AbstractMatrix} from\n   * @param {M} to\n   * @return {M}\n   */\n  static copy(from, to) {\n    for (const [row, column, value] of from.entries()) {\n      to.set(row, column, value);\n    }\n\n    return to;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray.isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!isAnyArray.isAnyArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!isAnyArray.isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!isAnyArray.isAnyArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!isAnyArray.isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!isAnyArray.isAnyArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * iterator from left to right, from top to bottom\n   * yield [row, column, value]\n   * @returns {Generator<[number, number, number], void, void>}\n   */\n  *entries() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns; col++) {\n        yield [row, col, this.get(row, col)];\n      }\n    }\n  }\n\n  /**\n   * iterator from left to right, from top to bottom\n   * yield value\n   * @returns {Generator<number, void, void>}\n   */\n  *values() {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.columns; col++) {\n        yield this.get(row, col);\n      }\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction isArrayOfNumbers(array) {\n  return array.every((element) => {\n    return typeof element === 'number';\n  });\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nclass Matrix extends AbstractMatrix {\n  /**\n   * @type {Float64Array[]}\n   */\n  data;\n\n  /**\n   * Init an empty matrix\n   * @param {number} nRows\n   * @param {number} nColumns\n   */\n  #initData(nRows, nColumns) {\n    this.data = [];\n\n    if (Number.isInteger(nColumns) && nColumns >= 0) {\n      for (let i = 0; i < nRows; i++) {\n        this.data.push(new Float64Array(nColumns));\n      }\n    } else {\n      throw new TypeError('nColumns must be a positive integer');\n    }\n\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      this.#initData(nRows.rows, nRows.columns);\n      Matrix.copy(nRows, this);\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      this.#initData(nRows, nColumns);\n    } else if (isAnyArray.isAnyArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        if (!isArrayOfNumbers(arrayData[i])) {\n          throw new TypeError('Input data contains non-numeric values');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n\n      this.rows = nRows;\n      this.columns = nColumns;\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n\n/**\n * @typedef {0 | 1 | number | boolean} Mask\n */\n\nclass SymmetricMatrix extends AbstractMatrix {\n  /** @type {Matrix} */\n  #matrix;\n\n  get size() {\n    return this.#matrix.size;\n  }\n\n  get rows() {\n    return this.#matrix.rows;\n  }\n\n  get columns() {\n    return this.#matrix.columns;\n  }\n\n  get diagonalSize() {\n    return this.rows;\n  }\n\n  /**\n   * not the same as matrix.isSymmetric()\n   * Here is to check if it's instanceof SymmetricMatrix without bundling issues\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  static isSymmetricMatrix(value) {\n    return Matrix.isMatrix(value) && value.klassType === 'SymmetricMatrix';\n  }\n\n  /**\n   * @param diagonalSize\n   * @return {SymmetricMatrix}\n   */\n  static zeros(diagonalSize) {\n    return new this(diagonalSize);\n  }\n\n  /**\n   * @param diagonalSize\n   * @return {SymmetricMatrix}\n   */\n  static ones(diagonalSize) {\n    return new this(diagonalSize).fill(1);\n  }\n\n  /**\n   * @param {number | AbstractMatrix | ArrayLike<ArrayLike<number>>} diagonalSize\n   * @return {this}\n   */\n  constructor(diagonalSize) {\n    super();\n\n    if (Matrix.isMatrix(diagonalSize)) {\n      if (!diagonalSize.isSymmetric()) {\n        throw new TypeError('not symmetric data');\n      }\n\n      this.#matrix = Matrix.copy(\n        diagonalSize,\n        new Matrix(diagonalSize.rows, diagonalSize.rows),\n      );\n    } else if (Number.isInteger(diagonalSize) && diagonalSize >= 0) {\n      this.#matrix = new Matrix(diagonalSize, diagonalSize);\n    } else {\n      this.#matrix = new Matrix(diagonalSize);\n\n      if (!this.isSymmetric()) {\n        throw new TypeError('not symmetric data');\n      }\n    }\n  }\n\n  clone() {\n    const matrix = new SymmetricMatrix(this.diagonalSize);\n\n    for (const [row, col, value] of this.upperRightEntries()) {\n      matrix.set(row, col, value);\n    }\n\n    return matrix;\n  }\n\n  toMatrix() {\n    return new Matrix(this);\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.#matrix.get(rowIndex, columnIndex);\n  }\n  set(rowIndex, columnIndex, value) {\n    // symmetric set\n    this.#matrix.set(rowIndex, columnIndex, value);\n    this.#matrix.set(columnIndex, rowIndex, value);\n\n    return this;\n  }\n\n  removeCross(index) {\n    // symmetric remove side\n    this.#matrix.removeRow(index);\n    this.#matrix.removeColumn(index);\n\n    return this;\n  }\n\n  addCross(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.diagonalSize;\n    }\n\n    const row = array.slice();\n    row.splice(index, 1);\n\n    this.#matrix.addRow(index, row);\n    this.#matrix.addColumn(index, array);\n\n    return this;\n  }\n\n  /**\n   * @param {Mask[]} mask\n   */\n  applyMask(mask) {\n    if (mask.length !== this.diagonalSize) {\n      throw new RangeError('Mask size do not match with matrix size');\n    }\n\n    // prepare sides to remove from matrix from mask\n    /** @type {number[]} */\n    const sidesToRemove = [];\n    for (const [index, passthroughs] of mask.entries()) {\n      if (passthroughs) continue;\n      sidesToRemove.push(index);\n    }\n    // to remove from highest to lowest for no mutation shifting\n    sidesToRemove.reverse();\n\n    // remove sides\n    for (const sideIndex of sidesToRemove) {\n      this.removeCross(sideIndex);\n    }\n\n    return this;\n  }\n\n  /**\n   * Compact format upper-right corner of matrix\n   * iterate from left to right, from top to bottom.\n   *\n   * ```\n   *   A B C D\n   * A 1 2 3 4\n   * B 2 5 6 7\n   * C 3 6 8 9\n   * D 4 7 9 10\n   * ```\n   *\n   * will return compact 1D array `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`\n   *\n   * length is S(i=0, n=sideSize) => 10 for a 4 sideSized matrix\n   *\n   * @returns {number[]}\n   */\n  toCompact() {\n    const { diagonalSize } = this;\n\n    /** @type {number[]} */\n    const compact = new Array((diagonalSize * (diagonalSize + 1)) / 2);\n    for (let col = 0, row = 0, index = 0; index < compact.length; index++) {\n      compact[index] = this.get(row, col);\n\n      if (++col >= diagonalSize) col = ++row;\n    }\n\n    return compact;\n  }\n\n  /**\n   * @param {number[]} compact\n   * @return {SymmetricMatrix}\n   */\n  static fromCompact(compact) {\n    const compactSize = compact.length;\n    // compactSize = (sideSize * (sideSize + 1)) / 2\n    // https://mathsolver.microsoft.com/fr/solve-problem/y%20%3D%20%20x%20%60cdot%20%20%20%60frac%7B%20%20%60left(%20x%2B1%20%20%60right)%20%20%20%20%7D%7B%202%20%20%7D\n    // sideSize = (Sqrt(8 × compactSize + 1) - 1) / 2\n    const diagonalSize = (Math.sqrt(8 * compactSize + 1) - 1) / 2;\n\n    if (!Number.isInteger(diagonalSize)) {\n      throw new TypeError(\n        `This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(\n          compact,\n        )}`,\n      );\n    }\n\n    const matrix = new SymmetricMatrix(diagonalSize);\n    for (let col = 0, row = 0, index = 0; index < compactSize; index++) {\n      matrix.set(col, row, compact[index]);\n      if (++col >= diagonalSize) col = ++row;\n    }\n\n    return matrix;\n  }\n\n  /**\n   * half iterator upper-right-corner from left to right, from top to bottom\n   * yield [row, column, value]\n   *\n   * @returns {Generator<[number, number, number], void, void>}\n   */\n  *upperRightEntries() {\n    for (let row = 0, col = 0; row < this.diagonalSize; void 0) {\n      const value = this.get(row, col);\n\n      yield [row, col, value];\n\n      // at the end of row, move cursor to next row at diagonal position\n      if (++col >= this.diagonalSize) col = ++row;\n    }\n  }\n\n  /**\n   * half iterator upper-right-corner from left to right, from top to bottom\n   * yield value\n   *\n   * @returns {Generator<[number, number, number], void, void>}\n   */\n  *upperRightValues() {\n    for (let row = 0, col = 0; row < this.diagonalSize; void 0) {\n      const value = this.get(row, col);\n\n      yield value;\n\n      // at the end of row, move cursor to next row at diagonal position\n      if (++col >= this.diagonalSize) col = ++row;\n    }\n  }\n}\nSymmetricMatrix.prototype.klassType = 'SymmetricMatrix';\n\nclass DistanceMatrix extends SymmetricMatrix {\n  /**\n   * not the same as matrix.isSymmetric()\n   * Here is to check if it's instanceof SymmetricMatrix without bundling issues\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  static isDistanceMatrix(value) {\n    return (\n      SymmetricMatrix.isSymmetricMatrix(value) &&\n      value.klassSubType === 'DistanceMatrix'\n    );\n  }\n\n  constructor(sideSize) {\n    super(sideSize);\n\n    if (!this.isDistance()) {\n      throw new TypeError('Provided arguments do no produce a distance matrix');\n    }\n  }\n\n  set(rowIndex, columnIndex, value) {\n    // distance matrix diagonal is 0\n    if (rowIndex === columnIndex) value = 0;\n\n    return super.set(rowIndex, columnIndex, value);\n  }\n\n  addCross(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.diagonalSize;\n    }\n\n    // ensure distance\n    array = array.slice();\n    array[index] = 0;\n\n    return super.addCross(index, array);\n  }\n\n  toSymmetricMatrix() {\n    return new SymmetricMatrix(this);\n  }\n\n  clone() {\n    const matrix = new DistanceMatrix(this.diagonalSize);\n\n    for (const [row, col, value] of this.upperRightEntries()) {\n      if (row === col) continue;\n      matrix.set(row, col, value);\n    }\n\n    return matrix;\n  }\n\n  /**\n   * Compact format upper-right corner of matrix\n   * no diagonal (only zeros)\n   * iterable from left to right, from top to bottom.\n   *\n   * ```\n   *   A B C D\n   * A 0 1 2 3\n   * B 1 0 4 5\n   * C 2 4 0 6\n   * D 3 5 6 0\n   * ```\n   *\n   * will return compact 1D array `[1, 2, 3, 4, 5, 6]`\n   *\n   * length is S(i=0, n=sideSize-1) => 6 for a 4 side sized matrix\n   *\n   * @returns {number[]}\n   */\n  toCompact() {\n    const { diagonalSize } = this;\n    const compactLength = ((diagonalSize - 1) * diagonalSize) / 2;\n\n    /** @type {number[]} */\n    const compact = new Array(compactLength);\n    for (let col = 1, row = 0, index = 0; index < compact.length; index++) {\n      compact[index] = this.get(row, col);\n\n      if (++col >= diagonalSize) col = ++row + 1;\n    }\n\n    return compact;\n  }\n\n  /**\n   * @param {number[]} compact\n   */\n  static fromCompact(compact) {\n    const compactSize = compact.length;\n\n    if (compactSize === 0) {\n      return new this(0);\n    }\n\n    // compactSize in Natural integer range ]0;∞]\n    // compactSize = (sideSize * (sideSize - 1)) / 2\n    // sideSize = (Sqrt(8 × compactSize + 1) + 1) / 2\n    const diagonalSize = (Math.sqrt(8 * compactSize + 1) + 1) / 2;\n\n    if (!Number.isInteger(diagonalSize)) {\n      throw new TypeError(\n        `This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(\n          compact,\n        )}`,\n      );\n    }\n\n    const matrix = new this(diagonalSize);\n    for (let col = 1, row = 0, index = 0; index < compactSize; index++) {\n      matrix.set(col, row, compact[index]);\n      if (++col >= diagonalSize) col = ++row + 1;\n    }\n\n    return matrix;\n  }\n}\nDistanceMatrix.prototype.klassSubType = 'DistanceMatrix';\n\nclass BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n\nclass MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n\nclass MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n\nclass MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n\nclass MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n\nclass MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n\nclass MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n\nclass MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    checkRowIndices(matrix, rowIndices);\n    checkColumnIndices(matrix, columnIndices);\n    super(matrix, rowIndices.length, columnIndices.length);\n    this.rowIndices = rowIndices;\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n\nclass MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n\nclass MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n\nclass WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n\nclass WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n\nfunction wrap(array, options) {\n  if (isAnyArray.isAnyArray(array)) {\n    if (array[0] && isAnyArray.isAnyArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n\nclass LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n\nfunction hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nclass QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n\nclass SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n\nfunction inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nfunction solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n\nfunction determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nfunction linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n\nfunction pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SingularValueDecomposition(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n\nfunction covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray.isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n\nfunction correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !isAnyArray.isAnyArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n\nclass EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      do {\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        // eslint-disable-next-line no-multi-assign\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          // eslint-disable-next-line no-multi-assign\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n\nclass CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &&= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = positiveDefinite;\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n\nclass nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (isAnyArray.isAnyArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (Y.rows !== X.rows) {\n        throw new Error('Y should have the same number of rows as X');\n      }\n      u = Y.getColumnVector(0);\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n\nexports.AbstractMatrix = AbstractMatrix;\nexports.CHO = CholeskyDecomposition;\nexports.CholeskyDecomposition = CholeskyDecomposition;\nexports.DistanceMatrix = DistanceMatrix;\nexports.EVD = EigenvalueDecomposition;\nexports.EigenvalueDecomposition = EigenvalueDecomposition;\nexports.LU = LuDecomposition;\nexports.LuDecomposition = LuDecomposition;\nexports.Matrix = Matrix;\nexports.MatrixColumnSelectionView = MatrixColumnSelectionView;\nexports.MatrixColumnView = MatrixColumnView;\nexports.MatrixFlipColumnView = MatrixFlipColumnView;\nexports.MatrixFlipRowView = MatrixFlipRowView;\nexports.MatrixRowSelectionView = MatrixRowSelectionView;\nexports.MatrixRowView = MatrixRowView;\nexports.MatrixSelectionView = MatrixSelectionView;\nexports.MatrixSubView = MatrixSubView;\nexports.MatrixTransposeView = MatrixTransposeView;\nexports.NIPALS = nipals;\nexports.Nipals = nipals;\nexports.QR = QrDecomposition;\nexports.QrDecomposition = QrDecomposition;\nexports.SVD = SingularValueDecomposition;\nexports.SingularValueDecomposition = SingularValueDecomposition;\nexports.SymmetricMatrix = SymmetricMatrix;\nexports.WrapperMatrix1D = WrapperMatrix1D;\nexports.WrapperMatrix2D = WrapperMatrix2D;\nexports.correlation = correlation;\nexports.covariance = covariance;\nexports.default = Matrix;\nexports.determinant = determinant;\nexports.inverse = inverse;\nexports.linearDependencies = linearDependencies;\nexports.pseudoInverse = pseudoInverse;\nexports.solve = solve;\nexports.wrap = wrap;\n","import * as matrix from './matrix.js';\n\nexport const AbstractMatrix = matrix.AbstractMatrix;\nexport const CHO = matrix.CHO;\nexport const CholeskyDecomposition = matrix.CholeskyDecomposition;\nexport const DistanceMatrix = matrix.DistanceMatrix;\nexport const EVD = matrix.EVD;\nexport const EigenvalueDecomposition = matrix.EigenvalueDecomposition;\nexport const LU = matrix.LU;\nexport const LuDecomposition = matrix.LuDecomposition;\nexport const Matrix = matrix.Matrix;\nexport const MatrixColumnSelectionView = matrix.MatrixColumnSelectionView;\nexport const MatrixColumnView = matrix.MatrixColumnView;\nexport const MatrixFlipColumnView = matrix.MatrixFlipColumnView;\nexport const MatrixFlipRowView = matrix.MatrixFlipRowView;\nexport const MatrixRowSelectionView = matrix.MatrixRowSelectionView;\nexport const MatrixRowView = matrix.MatrixRowView;\nexport const MatrixSelectionView = matrix.MatrixSelectionView;\nexport const MatrixSubView = matrix.MatrixSubView;\nexport const MatrixTransposeView = matrix.MatrixTransposeView;\nexport const NIPALS = matrix.NIPALS;\nexport const Nipals = matrix.Nipals;\nexport const QR = matrix.QR;\nexport const QrDecomposition = matrix.QrDecomposition;\nexport const SVD = matrix.SVD;\nexport const SingularValueDecomposition = matrix.SingularValueDecomposition;\nexport const SymmetricMatrix = matrix.SymmetricMatrix;\nexport const WrapperMatrix1D = matrix.WrapperMatrix1D;\nexport const WrapperMatrix2D = matrix.WrapperMatrix2D;\nexport const correlation = matrix.correlation;\nexport const covariance = matrix.covariance;\nexport default matrix.default.Matrix ? matrix.default.Matrix : matrix.Matrix;\nexport const determinant = matrix.determinant;\nexport const inverse = matrix.inverse;\nexport const linearDependencies = matrix.linearDependencies;\nexport const pseudoInverse = matrix.pseudoInverse;\nexport const solve = matrix.solve;\nexport const wrap = matrix.wrap;\n","import { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\nimport { BaseRegression, checkArrayLength, maybeToPrecision, } from 'ml-regression-base';\nexport class PolynomialRegression extends BaseRegression {\n    /**\n     * @param x - independent or explanatory variable\n     * @param y - dependent or response variable\n     * @param degree - degree of the polynomial regression, or array of powers to be used. When degree is an array, intercept at zero is forced to false/ignored.\n     * @example `new PolynomialRegression(x, y, 2)`, in this case, you can pass the option `interceptAtZero`, if you need it.\n     * @example `new PolynomialRegression(x, y, [1, 3, 5])`\n     * Each of the degrees corresponds to a column, so if you have them switched, just do:\n     * @example `new PolynomialRegression(x, y, [3, 1, 5])`\n     *\n     * @param options.interceptAtZero - force the polynomial regression so that f(0) = 0\n     */\n    constructor(x, y, degree, options = {}) {\n        super();\n        // @ts-expect-error internal use only\n        if (x === true) {\n            // @ts-expect-error internal use only\n            this.degree = y.degree;\n            // @ts-expect-error internal use only\n            this.powers = y.powers;\n            // @ts-expect-error internal use only\n            this.coefficients = y.coefficients;\n        }\n        else {\n            checkArrayLength(x, y);\n            const result = regress(x, y, degree, options);\n            this.degree = result.degree;\n            this.powers = result.powers;\n            this.coefficients = result.coefficients;\n        }\n    }\n    _predict(x) {\n        let y = 0;\n        for (let k = 0; k < this.powers.length; k++) {\n            y += this.coefficients[k] * x ** this.powers[k];\n        }\n        return y;\n    }\n    toJSON() {\n        return {\n            name: 'polynomialRegression',\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients,\n        };\n    }\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n        let fn = '';\n        let str = '';\n        for (let k = 0; k < this.coefficients.length; k++) {\n            str = '';\n            if (this.coefficients[k] !== 0) {\n                if (this.powers[k] === 0) {\n                    str = maybeToPrecision(this.coefficients[k], precision);\n                }\n                else if (this.powers[k] === 1) {\n                    str = `${maybeToPrecision(this.coefficients[k], precision) + times}x`;\n                }\n                else {\n                    str = `${maybeToPrecision(this.coefficients[k], precision) + times}x${sup}${this.powers[k]}${closeSup}`;\n                }\n                if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n                    str = ` + ${str}`;\n                }\n                else if (k !== this.coefficients.length - 1) {\n                    str = ` ${str}`;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.startsWith('+')) {\n            fn = fn.slice(1);\n        }\n        return `f(x) = ${fn}`;\n    }\n    static load(json) {\n        if (json.name !== 'polynomialRegression') {\n            throw new TypeError('not a polynomial regression model');\n        }\n        // @ts-expect-error internal use only\n        return new PolynomialRegression(true, json);\n    }\n}\n/**\n * Perform a polynomial regression on the given data set.\n * This is an internal function.\n * @param x - independent or explanatory variable\n * @param y - dependent or response variable\n * @param degree - degree of the polynomial regression\n * @param options.interceptAtZero - force the polynomial regression so that $f(0) = 0$\n */\nfunction regress(x, y, degree, options = {}) {\n    const n = x.length;\n    let { interceptAtZero = false } = options;\n    let powers = [];\n    if (Array.isArray(degree)) {\n        powers = degree;\n        interceptAtZero = false; //must be false in this case\n    }\n    else if (typeof degree === 'number') {\n        if (interceptAtZero) {\n            powers = new Array(degree);\n            for (let k = 0; k < degree; k++) {\n                powers[k] = k + 1;\n            }\n        }\n        else {\n            powers = new Array(degree + 1);\n            for (let k = 0; k <= degree; k++) {\n                powers[k] = k;\n            }\n        }\n    }\n    const nCoefficients = powers.length; //1 per power, in any case.\n    const F = new Matrix(n, nCoefficients);\n    const Y = new Matrix([y]);\n    for (let k = 0; k < nCoefficients; k++) {\n        for (let i = 0; i < n; i++) {\n            if (powers[k] === 0) {\n                F.set(i, k, 1);\n            }\n            else {\n                F.set(i, k, x[i] ** powers[k]);\n            }\n        }\n    }\n    const FT = new MatrixTransposeView(F);\n    const A = FT.mmul(F);\n    const B = FT.mmul(new MatrixTransposeView(Y));\n    return {\n        coefficients: solve(A, B).to1DArray(),\n        degree: Math.max(...powers),\n        powers,\n    };\n}\n//# sourceMappingURL=index.js.map","import { BaseRegression, maybeToPrecision } from \"ml-regression-base\";\nimport { PolynomialRegression } from \"ml-regression-polynomial\";\n\n/*\n * Function that calculate the potential fit in the form f(x) = A*x^M\n * with a given M and return de A coefficient.\n *\n * @param {Vector} X - Vector of the x positions of the points.\n * @param {Vector} Y - Vector of the x positions of the points.\n * @param {Number} M - The exponent of the potential fit.\n * @return {Number} A - The A coefficient of the potential fit.\n */\nexport class PotentialRegression extends BaseRegression {\n  /**\n   * @class\n   * @param x - Independent variable\n   * @param y - Dependent variable\n   * @param M\n   */\n  constructor(x, y, M) {\n    super();\n    if (x === true) {\n      // reloading model\n      this.A = y.A;\n      this.M = y.M;\n    } else {\n      let n = x.length;\n      if (n !== y.length) {\n        throw new RangeError(\"input and output array have a different length\");\n      }\n\n      let linear = new PolynomialRegression(x, y, [M]);\n      this.A = linear.coefficients[0];\n      this.M = M;\n    }\n  }\n\n  _predict(x) {\n    return this.A * x ** this.M;\n  }\n\n  toJSON() {\n    return {\n      name: \"potentialRegression\",\n      A: this.A,\n      M: this.M,\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(this.A, precision)} * x^${this.M}`;\n  }\n\n  toLaTeX(precision) {\n    if (this.M >= 0) {\n      return `f(x) = ${maybeToPrecision(this.A, precision)}x^{${this.M}}`;\n    } else {\n      return `f(x) = \\\\frac{${maybeToPrecision(this.A, precision)}}{x^{${-this\n        .M}}}`;\n    }\n  }\n\n  static load(json) {\n    if (json.name !== \"potentialRegression\") {\n      throw new TypeError(\"not a potential regression model\");\n    }\n    return new PotentialRegression(true, json);\n  }\n}\n","import { BaseRegression, checkArrayLength, maybeToPrecision, } from 'ml-regression-base';\n/**\n * Class representing simple linear regression.\n * The regression uses OLS to calculate intercept and slope.\n */\nexport class SimpleLinearRegression extends BaseRegression {\n    /**\n     * @param x - explanatory variable\n     * @param y - response variable\n     */\n    constructor(x, y) {\n        super();\n        // @ts-expect-error internal use of the constructor, from `this.load`\n        if (x === true) {\n            // @ts-expect-error internal use of the constructor, from `this.load`\n            const yObj = y;\n            this.slope = yObj.slope;\n            this.intercept = yObj.intercept;\n            this.coefficients = [yObj.intercept, yObj.slope];\n        }\n        else {\n            checkArrayLength(x, y);\n            const result = regress(x, y);\n            this.slope = result.slope;\n            this.intercept = result.intercept;\n            this.coefficients = [result.intercept, result.slope];\n        }\n    }\n    /**\n     * Get the parameters and model name in JSON format\n     * @returns\n     */\n    toJSON() {\n        return {\n            name: 'simpleLinearRegression',\n            slope: this.slope,\n            intercept: this.intercept,\n        };\n    }\n    _predict(x) {\n        return this.slope * x + this.intercept;\n    }\n    /**\n     * Finds x for the given y value.\n     * @param y - response variable value\n     * @returns - x value\n     */\n    computeX(y) {\n        return (y - this.intercept) / this.slope;\n    }\n    /**\n     * Strings the linear function in the form 'f(x) = ax + b'\n     * @param precision - number of significant figures.\n     * @returns\n     */\n    toString(precision) {\n        let result = 'f(x) = ';\n        if (this.slope !== 0) {\n            const xFactor = maybeToPrecision(this.slope, precision);\n            result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n            if (this.intercept !== 0) {\n                const absIntercept = Math.abs(this.intercept);\n                const operator = absIntercept === this.intercept ? '+' : '-';\n                result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n            }\n        }\n        else {\n            result += maybeToPrecision(this.intercept, precision);\n        }\n        return result;\n    }\n    /**\n     * Strings the linear function in the form 'f(x) = ax + b'\n     * @param precision - number of significant figures.\n     * @returns\n     */\n    toLaTeX(precision) {\n        return this.toString(precision);\n    }\n    /**\n     * Class instance from a JSON Object.\n     * @param json\n     * @returns\n     */\n    static load(json) {\n        if (json.name !== 'simpleLinearRegression') {\n            throw new TypeError('not a SLR model');\n        }\n        // @ts-expect-error internal use of the constructor\n        return new SimpleLinearRegression(true, json);\n    }\n}\n/**\n * Internal  function.\n * It determines the parameters (slope, intercept) of the line that best fit the `x,y` vector-data (simple linear regression).\n * @param x - explanatory variable\n * @param y - response variable\n * @returns - slope and intercept of the best fit line\n */\nfunction regress(x, y) {\n    const n = x.length;\n    let xSum = 0;\n    let ySum = 0;\n    let xSquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n        xSum += x[i];\n        ySum += y[i];\n        xSquared += x[i] * x[i];\n        xY += x[i] * y[i];\n    }\n    const numerator = n * xY - xSum * ySum;\n    const slope = numerator / (n * xSquared - xSum * xSum);\n    return {\n        slope,\n        intercept: (1 / n) * ySum - slope * (1 / n) * xSum,\n    };\n}\n//# sourceMappingURL=index.js.map","import {\n  BaseRegression,\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\nimport { SimpleLinearRegression } from 'ml-regression-simple-linear';\n\nexport class ExponentialRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(input) {\n    return this.B * Math.exp(input * this.A);\n  }\n\n  toJSON() {\n    return {\n      name: 'exponentialRegression',\n      A: this.A,\n      B: this.B,\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(\n      this.B,\n      precision,\n    )} * e^(${maybeToPrecision(this.A, precision)} * x)`;\n  }\n\n  toLaTeX(precision) {\n    if (this.A >= 0) {\n      return `f(x) = ${maybeToPrecision(\n        this.B,\n        precision,\n      )}e^{${maybeToPrecision(this.A, precision)}x}`;\n    } else {\n      return `f(x) = \\\\frac{${maybeToPrecision(\n        this.B,\n        precision,\n      )}}{e^{${maybeToPrecision(-this.A, precision)}x}}`;\n    }\n  }\n\n  static load(json) {\n    if (json.name !== 'exponentialRegression') {\n      throw new TypeError('not a exponential regression model');\n    }\n    return new ExponentialRegression(true, json);\n  }\n}\n\nfunction regress(er, x, y) {\n  const n = x.length;\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(x, yl);\n  er.A = linear.slope;\n  er.B = Math.exp(linear.intercept);\n}\n","import {\n  BaseRegression,\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\nimport { SimpleLinearRegression } from 'ml-regression-simple-linear';\n\nexport class PowerRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // reloading model\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(newInputs) {\n    return this.A * newInputs ** this.B;\n  }\n\n  toJSON() {\n    return {\n      name: 'powerRegression',\n      A: this.A,\n      B: this.B,\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(\n      this.A,\n      precision,\n    )} * x^${maybeToPrecision(this.B, precision)}`;\n  }\n\n  toLaTeX(precision) {\n    let latex = '';\n    if (this.B >= 0) {\n      latex = `f(x) = ${maybeToPrecision(\n        this.A,\n        precision,\n      )}x^{${maybeToPrecision(this.B, precision)}}`;\n    } else {\n      latex = `f(x) = \\\\frac{${maybeToPrecision(\n        this.A,\n        precision,\n      )}}{x^{${maybeToPrecision(-this.B, precision)}}}`;\n    }\n    latex = latex.replace(/e([+-]?[0-9]+)/g, 'e^{$1}');\n    return latex;\n  }\n\n  static load(json) {\n    if (json.name !== 'powerRegression') {\n      throw new TypeError('not a power regression model');\n    }\n    return new PowerRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y) {\n  const n = x.length;\n  const xl = new Array(n);\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    xl[i] = Math.log(x[i]);\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(xl, yl);\n  pr.A = Math.exp(linear.intercept);\n  pr.B = linear.slope;\n}\n","import { Matrix, SVD, pseudoInverse } from 'ml-matrix';\n\nexport default class MultivariateLinearRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      y = new Matrix(y);\n      if (intercept) {\n        x.addColumn(new Array(x.rows).fill(1));\n      }\n      let xt = x.transpose();\n      const xx = xt.mmul(x);\n      const xy = xt.mmul(y);\n      const invxx = new SVD(xx).inverse();\n      const beta = xy.transpose().mmul(invxx).transpose();\n      this.weights = beta.to2DArray();\n      this.inputs = x.columns;\n      this.outputs = y.columns;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = y.clone().addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.rows - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = pseudoInverse(xx).mul(variance);\n        this.stdErrors = this.stdErrorMatrix\n          .diagonal()\n          .map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map((d, i) =>\n          this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i],\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    } else if (Matrix.isMatrix(x)) {\n      const y = new Matrix(x.rows, this.outputs);\n      for (let i = 0; i < x.rows; i++) {\n        y.setRow(i, this._predict(x.getRow(i)));\n      }\n      return y;\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: this.statistics\n        ? {\n            regressionStatistics: {\n              standardError: this.stdError,\n              observations: this.outputs,\n            },\n            variables: this.weights.map((d, i) => {\n              return {\n                label:\n                  i === this.weights.length - 1\n                    ? 'Intercept'\n                    : `X Variable ${i + 1}`,\n                coefficients: d,\n                standardError: this.stdErrors[i],\n                tStat: this.tStats[i],\n              };\n            }),\n          }\n        : undefined,\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass GaussianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = GaussianKernel;\n","'use strict';\n\nconst defaultOptions = {\n  degree: 1,\n  constant: 1,\n  scale: 1\n};\n\nclass PolynomialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    this.degree = options.degree;\n    this.constant = options.constant;\n    this.scale = options.scale;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.pow(this.scale * sum + this.constant, this.degree);\n  }\n}\n\nmodule.exports = PolynomialKernel;\n","'use strict';\n\nconst defaultOptions = {\n  alpha: 0.01,\n  constant: -Math.E\n};\n\nclass SigmoidKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.alpha = options.alpha;\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.tanh(this.alpha * sum + this.constant);\n  }\n}\n\nmodule.exports = SigmoidKernel;\n","'use strict';\n\nconst defaultOptions = {\n  sigma: 1,\n  degree: 1\n};\n\nclass ANOVAKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.degree = options.degree;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    var len = Math.min(x.length, y.length);\n    for (var i = 1; i <= len; ++i) {\n      sum += Math.pow(\n        Math.exp(\n          -this.sigma *\n            Math.pow(Math.pow(x[i - 1], i) - Math.pow(y[i - 1], i), 2)\n        ),\n        this.degree\n      );\n    }\n    return sum;\n  }\n}\n\nmodule.exports = ANOVAKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass CauchyKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    return 1 / (1 + squaredEuclidean(x, y) / (this.sigma * this.sigma));\n  }\n}\n\nmodule.exports = CauchyKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass ExponentialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = ExponentialKernel;\n","'use strict';\n\nclass HistogramIntersectionKernel {\n  compute(x, y) {\n    var min = Math.min(x.length, y.length);\n    var sum = 0;\n    for (var i = 0; i < min; ++i) {\n      sum += Math.min(x[i], y[i]);\n    }\n\n    return sum;\n  }\n}\n\nmodule.exports = HistogramIntersectionKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass LaplacianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.sigma);\n  }\n}\n\nmodule.exports = LaplacianKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass MultiquadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    return Math.sqrt(squaredEuclidean(x, y) + this.constant * this.constant);\n  }\n}\n\nmodule.exports = MultiquadraticKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass RationalQuadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return 1 - distance / (distance + this.constant);\n  }\n}\n\nmodule.exports = RationalQuadraticKernel;\n","'use strict';\n\nconst { Matrix, MatrixTransposeView } = require('ml-matrix');\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\n\nconst kernelType = {\n  gaussian: GaussianKernel,\n  rbf: GaussianKernel,\n  polynomial: PolynomialKernel,\n  poly: PolynomialKernel,\n  anova: ANOVAKernel,\n  cauchy: CauchyKernel,\n  exponential: ExponentialKernel,\n  histogram: HistogramKernel,\n  min: HistogramKernel,\n  laplacian: LaplacianKernel,\n  multiquadratic: MultiquadraticKernel,\n  rational: RationalKernel,\n  sigmoid: SigmoidKernel,\n  mlp: SigmoidKernel\n};\n\nclass Kernel {\n  constructor(type, options) {\n    this.kernelType = type;\n    if (type === 'linear') return;\n\n    if (typeof type === 'string') {\n      type = type.toLowerCase();\n\n      var KernelConstructor = kernelType[type];\n      if (KernelConstructor) {\n        this.kernelFunction = new KernelConstructor(options);\n      } else {\n        throw new Error(`unsupported kernel type: ${type}`);\n      }\n    } else if (typeof type === 'object' && typeof type.compute === 'function') {\n      this.kernelFunction = type;\n    } else {\n      throw new TypeError(\n        'first argument must be a valid kernel type or instance'\n      );\n    }\n  }\n\n  compute(inputs, landmarks) {\n    inputs = Matrix.checkMatrix(inputs);\n    if (landmarks === undefined) {\n      landmarks = inputs;\n    } else {\n      landmarks = Matrix.checkMatrix(landmarks);\n    }\n    if (this.kernelType === 'linear') {\n      return inputs.mmul(new MatrixTransposeView(landmarks));\n    }\n\n    const kernelMatrix = new Matrix(inputs.rows, landmarks.rows);\n    if (inputs === landmarks) {\n      // fast path, matrix is symmetric\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = i; j < inputs.rows; j++) {\n          const value = this.kernelFunction.compute(\n            inputs.getRow(i),\n            inputs.getRow(j)\n          );\n          kernelMatrix.set(i, j, value);\n          kernelMatrix.set(j, i, value);\n        }\n      }\n    } else {\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = 0; j < landmarks.rows; j++) {\n          kernelMatrix.set(\n            i,\n            j,\n            this.kernelFunction.compute(inputs.getRow(i), landmarks.getRow(j))\n          );\n        }\n      }\n    }\n    return kernelMatrix;\n  }\n}\n\nmodule.exports = Kernel;\n","import Kernel from \"ml-kernel\";\nimport { Matrix, solve } from \"ml-matrix\";\nimport { BaseRegression } from \"ml-regression-base\";\n\nconst defaultOptions = {\n  lambda: 0.1,\n  kernelType: \"gaussian\",\n  kernelOptions: {},\n  computeCoefficient: false,\n};\n\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport class KernelRidgeRegression extends BaseRegression {\n  constructor(inputs, outputs, options) {\n    super();\n    if (inputs === true) {\n      // reloading model\n      this.alpha = outputs.alpha;\n      this.inputs = outputs.inputs;\n      this.kernelType = outputs.kernelType;\n      this.kernelOptions = outputs.kernelOptions;\n      this.kernel = new Kernel(outputs.kernelType, outputs.kernelOptions);\n    } else {\n      inputs = Matrix.checkMatrix(inputs);\n      options = { ...defaultOptions, ...options };\n\n      const kernelFunction = new Kernel(\n        options.kernelType,\n        options.kernelOptions,\n      );\n      const K = kernelFunction.compute(inputs);\n      const n = inputs.rows;\n      K.add(Matrix.eye(n, n).mul(options.lambda));\n\n      this.alpha = solve(K, outputs);\n      this.inputs = inputs;\n      this.kernelType = options.kernelType;\n      this.kernelOptions = options.kernelOptions;\n      this.kernel = kernelFunction;\n    }\n  }\n\n  _predict(newInputs) {\n    return this.kernel\n      .compute([newInputs], this.inputs)\n      .mmul(this.alpha)\n      .getRow(0);\n  }\n\n  toJSON() {\n    return {\n      name: \"kernelRidgeRegression\",\n      alpha: this.alpha,\n      inputs: this.inputs,\n      kernelType: this.kernelType,\n      kernelOptions: this.kernelOptions,\n    };\n  }\n\n  static load(json) {\n    if (json.name !== \"kernelRidgeRegression\") {\n      throw new TypeError(\"not a KRR model\");\n    }\n    return new KernelRidgeRegression(true, json);\n  }\n}\n","import { Matrix, SVD } from \"ml-matrix\";\nimport { BaseRegression } from \"ml-regression-base\";\n\nconst defaultOptions = {\n  order: 2,\n};\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport class PolynomialFitRegression2D extends BaseRegression {\n  /**\n   * Constructor for the 2D polynomial fitting\n   * @param inputs\n   * @param outputs\n   * @param options\n   */\n  constructor(inputs, outputs, options = {}) {\n    super();\n    if (inputs === true) {\n      // reloading model\n      this.coefficients = Matrix.columnVector(outputs.coefficients);\n      this.order = outputs.order;\n      if (outputs.r) {\n        this.r = outputs.r;\n        this.r2 = outputs.r2;\n      }\n      if (outputs.chi2) {\n        this.chi2 = outputs.chi2;\n      }\n    } else {\n      options = { ...defaultOptions, ...options };\n      this.order = options.order;\n      this.coefficients = [];\n      this.X = inputs;\n      this.y = outputs;\n\n      this.train(this.X, this.y, options);\n    }\n  }\n\n  /**\n   * Function that fits the model given the data(X) and predictions(y).\n   * The third argument is an object with the following options:\n   * order: order of the polynomial to fit.\n   * @param {Matrix} X - A matrix with n rows and 2 columns.\n   * @param {Matrix} y - A vector of the prediction values.\n   */\n  train(X, y) {\n    if (!Matrix.isMatrix(X)) X = new Matrix(X);\n    if (!Matrix.isMatrix(y)) y = Matrix.columnVector(y);\n\n    if (y.rows !== X.rows) {\n      y = y.transpose();\n    }\n\n    if (X.columns !== 2) {\n      throw new RangeError(\n        `You give X with ${X.columns} columns and it must be 2`,\n      );\n    }\n    if (X.rows !== y.rows) {\n      throw new RangeError(\"X and y must have the same rows\");\n    }\n\n    let examples = X.rows;\n    let coefficients = ((this.order + 2) * (this.order + 1)) / 2;\n    if (examples < coefficients) {\n      throw new Error(\n        \"Insufficient number of points to create regression model.\",\n      );\n    }\n    this.coefficients = new Array(coefficients);\n\n    let x1 = X.getColumnVector(0);\n    let x2 = X.getColumnVector(1);\n\n    let scaleX1 = 1 / x1.clone().abs().max();\n    let scaleX2 = 1 / x2.clone().abs().max();\n    let scaleY = 1 / y.clone().abs().max();\n\n    x1.mulColumn(0, scaleX1);\n    x2.mulColumn(0, scaleX2);\n    y.mulColumn(0, scaleY);\n\n    let A = new Matrix(examples, coefficients);\n    let col = 0;\n\n    for (let i = 0; i <= this.order; ++i) {\n      let limit = this.order - i;\n      for (let j = 0; j <= limit; ++j) {\n        let result = powColVector(x1, i).mulColumnVector(powColVector(x2, j));\n        A.setColumn(col, result);\n        col++;\n      }\n    }\n\n    let svd = new SVD(A.transpose(), {\n      computeLeftSingularVectors: true,\n      computeRightSingularVectors: true,\n      autoTranspose: false,\n    });\n\n    let qqs = Matrix.rowVector(svd.diagonal);\n    qqs = qqs.apply((i, j) => {\n      if (qqs.get(i, j) >= 1e-15) qqs.set(i, j, 1 / qqs.get(i, j));\n      else qqs.set(i, j, 0);\n    });\n\n    let qqs1 = Matrix.zeros(examples, coefficients);\n    for (let i = 0; i < coefficients; ++i) {\n      qqs1.set(i, i, qqs.get(0, i));\n    }\n\n    qqs = qqs1;\n\n    let U = svd.rightSingularVectors;\n    let V = svd.leftSingularVectors;\n\n    this.coefficients = V.mmul(qqs.transpose()).mmul(U.transpose()).mmul(y);\n\n    col = 0;\n\n    for (let i = 0; i <= coefficients; ++i) {\n      let limit = this.order - i;\n      for (let j = 0; j <= limit; ++j) {\n        this.coefficients.set(\n          col,\n          0,\n          (this.coefficients.get(col, 0) * scaleX1 ** i * scaleX2 ** j) /\n            scaleY,\n        );\n        col++;\n      }\n    }\n  }\n\n  _predict(newInputs) {\n    let x1 = newInputs[0];\n    let x2 = newInputs[1];\n\n    let y = 0;\n    let column = 0;\n\n    for (let i = 0; i <= this.order; i++) {\n      for (let j = 0; j <= this.order - i; j++) {\n        y += x1 ** i * x2 ** j * this.coefficients.get(column, 0);\n        column++;\n      }\n    }\n\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: \"polyfit2D\",\n      order: this.order,\n      coefficients: this.coefficients,\n    };\n  }\n\n  static load(json) {\n    if (json.name !== \"polyfit2D\") {\n      throw new TypeError(\"not a polyfit2D model\");\n    }\n    return new PolynomialFitRegression2D(true, json);\n  }\n}\n\n/**\n * Function that given a column vector return this: vector^power\n * @param x - Column vector.\n * @param power - Pow number.\n * @returns {Suite|Matrix}\n */\nfunction powColVector(x, power) {\n  let result = x.clone();\n  for (let i = 0; i < x.rows; ++i) {\n    result.set(i, 0, result.get(i, 0) ** power);\n  }\n  return result;\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import { isAnyArray } from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isAnyArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport { median as default };\n","import median from 'ml-array-median';\nimport {\n  BaseRegression,\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\n\nexport class TheilSenRegression extends BaseRegression {\n  /**\n   * Theil–Sen estimator\n   * https://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator\n   * @param {Array<number>|boolean} x\n   * @param {Array<number>|object} y\n   * @constructor\n   */\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // loads the model\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = y.coefficients;\n    } else {\n      // creates the model\n      checkArrayLength(x, y);\n      theilSen(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'TheilSenRegression',\n      slope: this.slope,\n      intercept: this.intercept,\n    };\n  }\n\n  _predict(input) {\n    return this.slope * input + this.intercept;\n  }\n\n  computeX(input) {\n    return (input - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope) {\n      let xFactor = maybeToPrecision(this.slope, precision);\n      result += `${Math.abs(xFactor - 1) < 1e-5 ? '' : `${xFactor} * `}x`;\n      if (this.intercept) {\n        let absIntercept = Math.abs(this.intercept);\n        let operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'TheilSenRegression') {\n      throw new TypeError('not a Theil-Sen model');\n    }\n    return new TheilSenRegression(true, json);\n  }\n}\n\nfunction theilSen(regression, x, y) {\n  let len = x.length;\n  let slopes = new Array(len * len);\n  let count = 0;\n  for (let i = 0; i < len; ++i) {\n    for (let j = i + 1; j < len; ++j) {\n      if (x[i] !== x[j]) {\n        slopes[count++] = (y[j] - y[i]) / (x[j] - x[i]);\n      }\n    }\n  }\n  slopes.length = count;\n  let medianSlope = median(slopes);\n\n  let cuts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    cuts[i] = y[i] - medianSlope * x[i];\n  }\n\n  regression.slope = medianSlope;\n  regression.intercept = median(cuts);\n  regression.coefficients = [regression.intercept, regression.slope];\n}\n","export function predict(x, powers, coefficients) {\n    let y = 0;\n    for (let k = 0; k < powers.length; k++) {\n        y += coefficients[k] * x ** powers[k];\n    }\n    return y;\n}\n//# sourceMappingURL=predict.js.map","import { solve } from 'ml-matrix';\n/**\n * @ignore\n * @param tuple\n * @param powers\n * @returns\n */\nexport function calcCoefficients(tuple, powers) {\n    const X = [];\n    const Y = [];\n    for (let i = 0; i < tuple.length; i++) {\n        Y[i] = [tuple[i].y];\n        X[i] = new Array(powers.length);\n        for (let j = 0; j < powers.length; j++) {\n            X[i][j] = tuple[i].x ** powers[j];\n        }\n    }\n    return solve(X, Y).to1DArray();\n}\n//# sourceMappingURL=calcCoefficients.js.map","/**\n * @ignore\n * @param x\n * @param y\n * @param degree\n * @returns\n */\nexport function getRandomTuples(x, y, degree) {\n    const len = Math.floor(x.length / degree);\n    const tuples = new Array(len);\n    for (let i = 0; i < x.length; i++) {\n        let pos = Math.floor(Math.random() * len);\n        let counter = 0;\n        while (counter < x.length) {\n            if (!tuples[pos]) {\n                tuples[pos] = [\n                    {\n                        x: x[i],\n                        y: y[i],\n                    },\n                ];\n                break;\n            }\n            else if (tuples[pos].length < degree) {\n                tuples[pos].push({\n                    x: x[i],\n                    y: y[i],\n                });\n                break;\n            }\n            else {\n                counter++;\n                pos = (pos + 1) % len;\n            }\n        }\n        if (counter === x.length) {\n            return tuples;\n        }\n    }\n    return tuples;\n}\n//# sourceMappingURL=getRandomTuples.js.map","export function residualsMedian(residuals) {\n    residuals.sort((a, b) => a.residual - b.residual);\n    const l = residuals.length;\n    const half = Math.floor(l / 2);\n    return l % 2 === 0 ? residuals[half - 1] : residuals[half];\n}\n//# sourceMappingURL=residualsMedian.js.map","import { calcCoefficients } from './calcCoefficients';\nimport { getRandomTuples } from './getRandomTuples';\nimport { predict } from './predict';\nimport { residualsMedian } from './residualsMedian';\nexport function robustPolynomial(regression, x, y, degree) {\n    const powers = new Array(degree).fill(0).map((_, index) => index);\n    const tuples = getRandomTuples(x, y, degree);\n    let min;\n    for (const tuple of tuples) {\n        const coefficients = calcCoefficients(tuple, powers);\n        const residuals = [];\n        for (let j = 0; j < x.length; j++) {\n            const residual = y[j] - predict(x[j], powers, coefficients);\n            residuals[j] = {\n                residual: residual * residual,\n                coefficients,\n            };\n        }\n        const median = residualsMedian(residuals);\n        if (!min || median.residual < min.residual) {\n            min = median;\n        }\n    }\n    regression.degree = degree;\n    regression.powers = powers;\n    regression.coefficients = min ? min.coefficients : [];\n}\n//# sourceMappingURL=robustPolynomial.js.map","import { isAnyArray } from 'is-any-array';\nimport { BaseRegression, checkArrayLength, maybeToPrecision, } from 'ml-regression-base';\nimport { predict } from './utilities/predict';\nimport { robustPolynomial } from './utilities/robustPolynomial';\n/**\n * @class RobustPolynomialRegression\n * @param x\n * @param y\n * @param degree - polynomial degree\n */\nexport class RobustPolynomialRegression extends BaseRegression {\n    constructor(x, y, degree) {\n        super();\n        if (isAnyArray(x)) {\n            checkArrayLength(x, y);\n            robustPolynomial(this, x, y, degree);\n        }\n        else {\n            const name = 'robustPolynomialRegression';\n            const model = x;\n            this.degree = model.degree;\n            this.powers = model.powers;\n            this.coefficients = model.coefficients;\n            this.name = name;\n        }\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            degree: this.degree,\n            powers: this.powers,\n            coefficients: this.coefficients,\n        };\n    }\n    _predict(x) {\n        return predict(x, this.powers, this.coefficients);\n    }\n    /**\n     * Display the formula\n     * @param precision - precision for the numbers\n     * @returns\n     */\n    toString(precision) {\n        return this._toFormula(precision, false);\n    }\n    /**\n     * Display the formula in LaTeX format\n     * @param precision - precision for the numbers\n     * @returns\n     */\n    toLaTeX(precision) {\n        return this._toFormula(precision, true);\n    }\n    _toFormula(precision, isLaTeX) {\n        let sup = '^';\n        let closeSup = '';\n        let times = ' * ';\n        if (isLaTeX) {\n            sup = '^{';\n            closeSup = '}';\n            times = '';\n        }\n        let fn = '';\n        let str = '';\n        const coefficients = this.coefficients;\n        const powers = this.powers;\n        for (let k = 0; k < coefficients.length; k++) {\n            str = '';\n            if (coefficients[k] !== 0) {\n                if (powers[k] === 0) {\n                    str = maybeToPrecision(coefficients[k], precision);\n                }\n                else if (powers[k] === 1) {\n                    str = `${maybeToPrecision(coefficients[k], precision) + times}x`;\n                }\n                else {\n                    str = `${maybeToPrecision(coefficients[k], precision) + times}x${sup}${powers[k]}${closeSup}`;\n                }\n                if (coefficients[k] > 0 && k !== coefficients.length - 1) {\n                    str = ` + ${str}`;\n                }\n                else if (k !== coefficients.length - 1) {\n                    str = ` ${str}`;\n                }\n            }\n            fn = str + fn;\n        }\n        if (fn.startsWith('+')) {\n            fn = fn.slice(1);\n        }\n        return `f(x) = ${fn}`;\n    }\n    static load(json) {\n        if (json.name !== 'robustPolynomialRegression') {\n            throw new TypeError('not a RobustPolynomialRegression model');\n        }\n        return new RobustPolynomialRegression(json, undefined, undefined);\n    }\n}\n//# sourceMappingURL=index.js.map","import { PotentialRegression } from \"./regression/potential-regression\";\n\nexport {\n  SimpleLinearRegression,\n  SimpleLinearRegression as SLR,\n} from \"ml-regression-simple-linear\";\nexport { PolynomialRegression } from \"ml-regression-polynomial\";\nexport { ExponentialRegression } from \"ml-regression-exponential\";\nexport { PowerRegression } from \"ml-regression-power\";\nexport { default as MultivariateLinearRegression } from \"ml-regression-multivariate-linear\";\nconst NLR = {\n  PotentialRegression,\n};\nexport { NLR, NLR as NonLinearRegression };\n\nexport {\n  KernelRidgeRegression,\n  KernelRidgeRegression as KRR,\n} from \"./regression/kernel-ridge-regression\";\nexport { PolynomialFitRegression2D as PolinomialFitting2D } from \"./regression/poly-fit-regression2d\";\n\n// robust regressions\nexport { TheilSenRegression } from \"ml-regression-theil-sen\";\nexport { RobustPolynomialRegression } from \"ml-regression-robust-polynomial\";\n"],"names":["toString","Object","prototype","isAnyArray","value","tag","call","endsWith","includes","checkArrayLength","x","y","TypeError","length","RangeError","BaseRegression","constructor","new","target","Error","predict","_predict","xVal","push","train","precision","toLaTeX","score","n","y2","Array","i","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","Math","sqrt","r2","maybeToPrecision","number","figures","toPrecision","max","input","options","arguments","undefined","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","maxValue","min","minValue","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","factor","defineProperty","matrix","require$$0","require$$1","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","padMinus","name","inspectData","rows","columns","maxI","maxJ","result","loop","j","get","line","formatNumber","join","num","formatNumber2","padEnd","len","str","fix","toFixed","startsWith","exp","toExponential","slice","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","expm1","floor","fround","log","log1p","log10","log2","round","sign","sin","sinh","tan","tanh","trunc","pow","arg0","powS","powM","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","sumByRow","sum","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","varianceByColumn","varianceAll","size","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","row","column","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","data","l","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isDistance","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","maxRow","p","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","by","NaN","NEGATIVE_INFINITY","maxIndex","idx","POSITIVE_INFINITY","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","dot","cumulativeSum","vector2","vector1","mmul","other","Bcolj","Float64Array","s","mpow","scalar","bb","e","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","c2","console","warn","embed","mat","c","resultat","blockMult","a","b","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","IxB","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","from","to","entries","product","standardDeviation","center","Symbol","iterator","col","values","for","isArrayOfNumbers","every","element","randomInt","diagonal","identity","negate","tensorProduct","#initData","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","SymmetricMatrix","diagonalSize","isSymmetricMatrix","klassType","upperRightEntries","toMatrix","removeCross","addCross","applyMask","mask","sidesToRemove","passthroughs","reverse","sideIndex","toCompact","compact","fromCompact","compactSize","JSON","stringify","upperRightValues","DistanceMatrix","isDistanceMatrix","klassSubType","sideSize","toSymmetricMatrix","compactLength","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","LU","isSingular","solve","count","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","d","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","sdy","corr","EigenvalueDecomposition","assumeSymmetric","tred2","tql2","H","ort","orthes","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","hh","dl1","c3","el1","s2","tst1","low","high","nn","exshift","z","iter","w","ra","sa","vr","vi","notlast","cdivres","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","scaleScores","maxIterations","terminationCriteria","u","diff","tOld","counter","xResidual","residual","yResidual","betas","CHO","EVD","Matrix_1","MatrixTransposeView_1","NIPALS","Nipals","SVD","_default","default","pseudoInverse_1","solve_1","PolynomialRegression","degree","powers","coefficients","regress","_toFormula","isLaTeX","sup","closeSup","times","fn","load","json","interceptAtZero","isArray","nCoefficients","F","FT","A","PotentialRegression","M","linear","SimpleLinearRegression","yObj","slope","intercept","computeX","xFactor","absIntercept","operator","numerator","ExponentialRegression","er","yl","PowerRegression","newInputs","latex","replace","pr","xl","MultivariateLinearRegression","statistics","weights","inputs","outputs","xt","xx","xy","invxx","beta","fittedValues","residuals","map","ri","reduce","stdError","stdErrorMatrix","stdErrors","tStats","summary","regressionStatistics","standardError","observations","variables","label","tStat","model","squaredEuclidean","euclidean","defaultOptions","sigma","GaussianKernel","assign","divisor","compute","distance","gaussianKernel","constant","PolynomialKernel","polynomialKernel","E","SigmoidKernel","sigmoidKernel","ANOVAKernel","anovaKernel","CauchyKernel","cauchyKernel","ExponentialKernel","exponentialKernel","HistogramIntersectionKernel","histogramIntersectionKernel","LaplacianKernel","laplacianKernel","MultiquadraticKernel","multiquadraticKernel","RationalQuadraticKernel","rationalQuadraticKernel","require$$2","require$$3","require$$4","require$$5","require$$6","HistogramKernel","require$$7","require$$8","require$$9","RationalKernel","require$$10","kernelType","gaussian","rbf","polynomial","poly","anova","cauchy","exponential","histogram","laplacian","multiquadratic","rational","sigmoid","mlp","Kernel","toLowerCase","KernelConstructor","kernelFunction","landmarks","kernelMatrix","kernel","lambda","kernelOptions","computeCoefficient","KernelRidgeRegression","K","order","PolynomialFitRegression2D","examples","x1","x2","scaleX1","scaleX2","scaleY","limit","powColVector","qqs","qqs1","power","_ref","module","exports","window","median","quickSelectMedian","TheilSenRegression","theilSen","regression","slopes","medianSlope","cuts","calcCoefficients","tuple","getRandomTuples","tuples","pos","residualsMedian","half","robustPolynomial","_","RobustPolynomialRegression","NLR"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37]}